# mountains.ini                                                     2017-Apr-09
#------------------------------------------------------------------------------

# For use with map_gen 1.1.0
# Type "map_gen -i mountains.ini"
# (be sure to have "mountains.ini" in your current working directory)

# Uncomment exactly one of the parameter sets below

#------------------------------------------------------------------------------
[map_type]
#------------------------------------------------------------------------------

map_type = Mountains


#------------------------------------------------------------------------------
[Mountains]
#------------------------------------------------------------------------------

# Uncomment exactly one of the following parameter sets
#------------------------------------------------------------------------------

   # This is a large map with room for 14 computer opponents.
   # The human player is put at a similar position as the computer opponents.
#map_size = 230
#mapfile = "mountains230.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0   # human player at similar position as computer opponents
#
#lake_percentage = 7
#min_lake_size = 70
#max_lake_size = 690   # =  3 * map_size
#lake_dist = 1200
#
#glacier_percentage = 2
#max_no_of_glaciers = 23   # = map_size / 10


#------------------------------------------------------------------------------

   # Why are the lake parameters so important?
   # Well, rivers are essential for the Mountains scenario because
   # rivers provide a lot of fertile tiles needed for city places.
   # So it is important that there are enough rivers.
   # Rivers are created by an elevation/rain/erosion model.
   # Rivers are drawn only at those tiles which have a high throughput
   # of water.  In the Mountains scenario, 1 unit of water is raining on every
   # land tile; this water then flows into the lakes.  After a few
   # rain/flow/erosion cycles, the river beds are stabilized, and the rivers
   # are added to the map where the throughput of water (during the last cycle)
   # exceeds a threshold.
   # In the previous example, you should have seen 2 or 3 lakes typically.
   # That means that all the water from the whole map concentrates at the
   # shores of these few lakes, guaranteeing the threshold will be exceeded
   # at many points around the lakes (every unit of water must eventually
   # flow into one of the lakes), thus generating enough rivers.
   #
   # Now if we have a lot of small lakes scattered all over the map, the
   # water doesn't concentrate anywhere, and only a few, short rivers (if any)
   # are generated.  Let me demonstrate this with the following example.
#map_size = 230
#mapfile = "mountains230_few_rivers.cevo map"
#
#comp_opponents = 4  # reduced, so that map generation will not fail due to
#                    # too few starting positions
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#lake_percentage = 7
#min_lake_size = 7   # lake min/max size parameters divided by 10
#max_lake_size = 69  #                        => many small lakes
#lake_dist = 1200
#
#glacier_percentage = 2
#max_no_of_glaciers = 23


#------------------------------------------------------------------------------

   # This example tries to fix the 'many lakes' issue by lowering the
   # threshold with the parameter "river_visibility".
   # Otherwise, it has exactly the same parameters as the previous example.
#map_size = 230
#mapfile = "mountains230_visibility20.cevo map"
#
#comp_opponents = 4
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#lake_percentage = 7
#min_lake_size = 7   # lake min/max size parameters divided by 10
#max_lake_size = 69  # => many small lakes
#lake_dist = 1200
#river_visibility = 20  # default=100 -> 20
#
#glacier_percentage = 2
#max_no_of_glaciers = 23


#------------------------------------------------------------------------------

   # This example demonstrates another aspect of lake generation.
   # We set lake_percentage=1, i. e. we request 1% of the total 9600 tiles
   # on a 230% map to become water, 96 tiles.  But when we run this example,
   # we see there is one big lake, taking up more than 50% of the map.
   # This is due to the algorithm: Lake sizes are chosen randomly between
   # min_lake_size and max_lake_size, and then this lake is placed.
   # *Afterwards*, lake_percentage is checked against the total lake area
   # placed so far.  Lakes that have been placed are never removed, and so
   # there is always a little overshoot, or in this case, a big one.
#map_size = 230
#mapfile = "mountains230_BigLake.cevo map"
#
#comp_opponents = 4
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#lake_percentage = 1   # we request only 1% lakes, i. e. 96 of 9600 tiles ...
#min_lake_size = 4800  # ... but we get a lake which takes minimum 4800 tiles
#max_lake_size = 7500
#lake_dist = 1200
#
#glacier_percentage = 1  # we reduce glacier area a bit to compensate for
#max_no_of_glaciers = 10 # the smaller land area of less than 50%.


#------------------------------------------------------------------------------

   # Back to river_visibility once more.  It can help to place more starting
   # positions on small maps.
   # ----
   # Size 35% map for 14 opponents with modified river visibility.
   # Nevertheless, you will have to try several times until map
   # generation succeeds.
#map_size = 35
#river_visibility = 40  # default: 100
#mapfile = "mountains35_visibility40.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#
#lake_percentage = 7
#min_lake_size = 10
#max_lake_size = 105   # 3 * map_size
#lake_dist = 800
#
#glacier_percentage = 2
#max_no_of_glaciers = 3  # map_size / 10


#------------------------------------------------------------------------------

   # Without using river_visibility, a Mountains map for 14 opponents
   # (15 players) would have to be larger.
   # ----
   # Smallest map for 15 players without modified river visibility.
   # You still have to try several times (~10); size 70 would be better.
#map_size = 50
#mapfile = "mountains50_P15.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#
#lake_percentage = 7
#min_lake_size = 15
#max_lake_size = 150   # 3 * map_size
#lake_dist = 900
#
#glacier_percentage = 2
#max_no_of_glaciers = 5  # map_size / 10


#------------------------------------------------------------------------------

   # We can 'abuse' the Mountains scenario when we increase the water area
   # so much that building a fleet might become relevant.  In this example,
   # about 50% of the map is filled with water tiles.  To make a fleet useful,
   # we allow the lakes to merge together.
   # ----
   # Size 230 map for 14 opponents with 50% lakes
#map_size = 230
#mapfile = "mountains230_fjords.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#lake_percentage = 50
#min_lake_size = 40
#max_lake_size = 300  # We don't care for the '3 * map_size' rule here because
#                     # the starting positions will be located at coasts
#                     # mainly --- and there is plenty of coasts.
#                     # Note that there will be nearly no rivers on the map,
#                     # because the throughput concentration (and hence the
#                     # visibility threshold) is nearly nowhere reached.
#lake_dist = 0  # allow lakes to merge together
#
#glacier_percentage = 1  # reduced due to the reduced land mass
#max_no_of_glaciers = 10


#------------------------------------------------------------------------------

   # Here comes a small version of the above example.
   # It is rather unlikely to succeed, only 1 out of 20..30 tries succeed,
   # but hey, it is quiet fast, only 0.2 seconds on my machine, so you
   # might give it a try anyway ... uhm ... 30 tries anyway :-)
   # ----
   # Smallest map for 14 opponents with 50% lakes
#map_size = 35
#mapfile = "mountains35_fjords.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#lake_percentage = 50
#min_lake_size = 1
#max_lake_size = 50
#lake_dist = 0
#
#glacier_percentage = 1
#max_no_of_glaciers = 2


#------------------------------------------------------------------------------

   # This example is like the above, but uses a bigger map, so
   # success probability is above 50%.
   # ----
   # Size 50 map for 14 opponents with 50% lakes
#map_size = 50
#mapfile = "mountains50_fjords.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#lake_percentage = 50
#min_lake_size = 1
#max_lake_size = 50
#lake_dist = 0
#
#glacier_percentage = 1
#max_no_of_glaciers = 2


#------------------------------------------------------------------------------

   # Back to bigger maps.  We can further 'abuse' the scenario by making
   # the water area still bigger.
   # ----
   # Size 100 map for 14 opponents with maximum lake percentage
   # You'll have to try several times until map generation succeeds.
#map_size = 100
#lake_percentage = 82
#mapfile = "mountains100_Lake82.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#min_lake_size = 1
#max_lake_size = 50
#lake_dist = 0
#
#glacier_percentage = 1
#max_no_of_glaciers = 2


#------------------------------------------------------------------------------

   # Now I wanted to know where the limit is.  The following example
   # works quite well, but the lake percentage which is generated is not
   # accurate. This is due to a systematic error in the algorithm which
   # is neglectable for small percentages but becomes more and more
   # relevant for high percentages.
   # At this point I developed the Volcano_Islands scenario.
   # ----
   # Size 230 map for 14 opponents with 91% lakes
#map_size = 230
#lake_percentage = 91
#mapfile = "mountains230_Lake91.cevo map"
#
#comp_opponents = 14
#starting_pos_dist = 550
#startpos_min_rating = 8
#human_start_pos = 0
#
#min_lake_size = 50
#max_lake_size = 200
#lake_dist = 0
#
#glacier_percentage = 1  # reduced to the minimum due to reduced land mass
#max_no_of_glaciers = 1  # reduced to the minimum due to reduced land mass


#------------  end of "mountains.ini"  ------------------------
